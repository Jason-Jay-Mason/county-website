//@ts-nocheck
// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
import { gql } from 'tinacms';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String'];
  basename: Scalars['String'];
  breadcrumbs: Array<Scalars['String']>;
  path: Scalars['String'];
  relativePath: Scalars['String'];
  extension: Scalars['String'];
  template: Scalars['String'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean'];
  hasNextPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
  form: Scalars['JSON'];
  values: Scalars['JSON'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float'];
};

export type Query = {
  __typename?: 'Query';
  getCollection: Collection;
  getCollections: Array<Collection>;
  node: Node;
  getDocument: DocumentNode;
  getDocumentList: DocumentConnection;
  getDocumentFields: Scalars['JSON'];
  getGlobalDocument: GlobalDocument;
  getGlobalList: GlobalConnection;
  getHomeDocument: HomeDocument;
  getHomeList: HomeConnection;
  getAboutDocument: AboutDocument;
  getAboutList: AboutConnection;
  getContactDocument: ContactDocument;
  getContactList: ContactConnection;
  getProjectsDocument: ProjectsDocument;
  getProjectsList: ProjectsConnection;
  getProjectDocument: ProjectDocument;
  getProjectList: ProjectConnection;
  getServiceDocument: ServiceDocument;
  getServiceList: ServiceConnection;
  getLegalDocument: LegalDocument;
  getLegalList: LegalConnection;
};


export type QueryGetCollectionArgs = {
  collection?: InputMaybe<Scalars['String']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type QueryGetDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetDocumentListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetGlobalDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetGlobalListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetHomeDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetHomeListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetAboutDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetAboutListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetContactDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetContactListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetProjectsDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetProjectsListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetProjectDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetProjectListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetServiceDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetServiceListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};


export type QueryGetLegalDocumentArgs = {
  relativePath?: InputMaybe<Scalars['String']>;
};


export type QueryGetLegalListArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String'];
  slug: Scalars['String'];
  label?: Maybe<Scalars['String']>;
  path: Scalars['String'];
  format?: Maybe<Scalars['String']>;
  matches?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']>;
  after?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Float']>;
  last?: InputMaybe<Scalars['Float']>;
};

export type DocumentNode = GlobalDocument | HomeDocument | AboutDocument | ContactDocument | ProjectsDocument | ProjectDocument | ServiceDocument | LegalDocument;

export type GlobalHeaderNavChildren = {
  __typename?: 'GlobalHeaderNavChildren';
  href?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  blurb?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
};

export type GlobalHeaderNav = {
  __typename?: 'GlobalHeaderNav';
  href?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  children?: Maybe<Array<Maybe<GlobalHeaderNavChildren>>>;
};

export type GlobalHeader = {
  __typename?: 'GlobalHeader';
  nav?: Maybe<Array<Maybe<GlobalHeaderNav>>>;
};

export type GlobalReviewsReviewsList = {
  __typename?: 'GlobalReviewsReviewsList';
  title?: Maybe<Scalars['String']>;
  profile?: Maybe<Scalars['String']>;
  review?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['String']>;
};

export type GlobalReviews = {
  __typename?: 'GlobalReviews';
  sliderSpeed?: Maybe<Scalars['Float']>;
  reviewsList?: Maybe<Array<Maybe<GlobalReviewsReviewsList>>>;
};

export type GlobalContactInfo = {
  __typename?: 'GlobalContactInfo';
  businessName?: Maybe<Scalars['String']>;
  phoneNumber?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  hours?: Maybe<Scalars['String']>;
  facebookUrl?: Maybe<Scalars['String']>;
  googleMapsUrl?: Maybe<Scalars['String']>;
  linkedInUrl?: Maybe<Scalars['String']>;
  youTubeUrl?: Maybe<Scalars['String']>;
  instagramUrl?: Maybe<Scalars['String']>;
  bbbUrl?: Maybe<Scalars['String']>;
};

export type GlobalFooterServices = {
  __typename?: 'GlobalFooterServices';
  title?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
};

export type GlobalFooterPages = {
  __typename?: 'GlobalFooterPages';
  title?: Maybe<Scalars['String']>;
  link?: Maybe<Scalars['String']>;
};

export type GlobalFooterLegalTitleDocument = LegalDocument;

export type GlobalFooterLegal = {
  __typename?: 'GlobalFooterLegal';
  title?: Maybe<GlobalFooterLegalTitleDocument>;
};

export type GlobalFooter = {
  __typename?: 'GlobalFooter';
  services?: Maybe<Array<Maybe<GlobalFooterServices>>>;
  pages?: Maybe<Array<Maybe<GlobalFooterPages>>>;
  legal?: Maybe<Array<Maybe<GlobalFooterLegal>>>;
};

export type Global = {
  __typename?: 'Global';
  header?: Maybe<GlobalHeader>;
  reviews?: Maybe<GlobalReviews>;
  contactInfo?: Maybe<GlobalContactInfo>;
  footer?: Maybe<GlobalFooter>;
};

export type GlobalDocument = Node & Document & {
  __typename?: 'GlobalDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Global;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type GlobalConnectionEdges = {
  __typename?: 'GlobalConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<GlobalDocument>;
};

export type GlobalConnection = Connection & {
  __typename?: 'GlobalConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<GlobalConnectionEdges>>>;
};

export type HomeHero = {
  __typename?: 'HomeHero';
  subHeadline?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  mobileBackgroundSrc?: Maybe<Scalars['String']>;
  hook?: Maybe<Scalars['String']>;
  videoButtonToggle?: Maybe<Scalars['Boolean']>;
  videoButtonText?: Maybe<Scalars['String']>;
  videoButtonLink?: Maybe<Scalars['String']>;
  ctaButtonToggle?: Maybe<Scalars['Boolean']>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
};

export type HomeServiceSliderCategoryListServicesTitleDocument = ServiceDocument;

export type HomeServiceSliderCategoryListServices = {
  __typename?: 'HomeServiceSliderCategoryListServices';
  title?: Maybe<HomeServiceSliderCategoryListServicesTitleDocument>;
};

export type HomeServiceSliderCategoryList = {
  __typename?: 'HomeServiceSliderCategoryList';
  title?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['String']>;
  toggleServices?: Maybe<Scalars['Boolean']>;
  services?: Maybe<Array<Maybe<HomeServiceSliderCategoryListServices>>>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
  beforeImage?: Maybe<Scalars['String']>;
  afterImage?: Maybe<Scalars['String']>;
};

export type HomeServiceSlider = {
  __typename?: 'HomeServiceSlider';
  categoryList?: Maybe<Array<Maybe<HomeServiceSliderCategoryList>>>;
};

export type HomePlanSliderCategoryList = {
  __typename?: 'HomePlanSliderCategoryList';
  title?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['String']>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
  featuredImage?: Maybe<Scalars['String']>;
};

export type HomePlanSlider = {
  __typename?: 'HomePlanSlider';
  categoryList?: Maybe<Array<Maybe<HomePlanSliderCategoryList>>>;
};

export type HomePreFooterCta = {
  __typename?: 'HomePreFooterCTA';
  subHeadline?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
};

export type HomeSeo = {
  __typename?: 'HomeSeo';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  noFollow?: Maybe<Scalars['Boolean']>;
  noIndex?: Maybe<Scalars['Boolean']>;
};

export type Home = {
  __typename?: 'Home';
  hero?: Maybe<HomeHero>;
  serviceSlider?: Maybe<HomeServiceSlider>;
  planSlider?: Maybe<HomePlanSlider>;
  preFooterCTA?: Maybe<HomePreFooterCta>;
  seo?: Maybe<HomeSeo>;
};

export type HomeDocument = Node & Document & {
  __typename?: 'HomeDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Home;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type HomeConnectionEdges = {
  __typename?: 'HomeConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<HomeDocument>;
};

export type HomeConnection = Connection & {
  __typename?: 'HomeConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<HomeConnectionEdges>>>;
};

export type AboutHero = {
  __typename?: 'AboutHero';
  icon?: Maybe<Scalars['String']>;
  pageTitle?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  hook?: Maybe<Scalars['String']>;
  ctaButtonToggle?: Maybe<Scalars['Boolean']>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
  videoButtonToggle?: Maybe<Scalars['Boolean']>;
  videoButtonText?: Maybe<Scalars['String']>;
  videoButtonLink?: Maybe<Scalars['String']>;
};

export type AboutFeaturedSection = {
  __typename?: 'AboutFeaturedSection';
  subHeadline?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['String']>;
  ctaButtonToggle?: Maybe<Scalars['Boolean']>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
};

export type AboutFeaturedGridFeatures = {
  __typename?: 'AboutFeaturedGridFeatures';
  title?: Maybe<Scalars['String']>;
  iconToggle?: Maybe<Scalars['Boolean']>;
  icon?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['String']>;
};

export type AboutFeaturedGrid = {
  __typename?: 'AboutFeaturedGrid';
  maxColumns?: Maybe<Scalars['Float']>;
  features?: Maybe<Array<Maybe<AboutFeaturedGridFeatures>>>;
};

export type AboutLongTextBodyRowsBodyColumns = {
  __typename?: 'AboutLongTextBodyRowsBodyColumns';
  body?: Maybe<Scalars['String']>;
};

export type AboutLongTextBodyRows = {
  __typename?: 'AboutLongTextBodyRows';
  bodyColumns?: Maybe<Array<Maybe<AboutLongTextBodyRowsBodyColumns>>>;
};

export type AboutLongText = {
  __typename?: 'AboutLongText';
  subHeadline?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  bodyRows?: Maybe<Array<Maybe<AboutLongTextBodyRows>>>;
  ctaButtonToggle?: Maybe<Scalars['Boolean']>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
  ctaButtonToggle2?: Maybe<Scalars['Boolean']>;
  ctaButtonText2?: Maybe<Scalars['String']>;
  ctaButtonLink2?: Maybe<Scalars['String']>;
};

export type AboutSeo = {
  __typename?: 'AboutSeo';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  noFollow?: Maybe<Scalars['Boolean']>;
  noIndex?: Maybe<Scalars['Boolean']>;
};

export type About = {
  __typename?: 'About';
  hero?: Maybe<AboutHero>;
  featuredSection?: Maybe<AboutFeaturedSection>;
  featuredGrid?: Maybe<AboutFeaturedGrid>;
  longText?: Maybe<AboutLongText>;
  seo?: Maybe<AboutSeo>;
};

export type AboutDocument = Node & Document & {
  __typename?: 'AboutDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: About;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type AboutConnectionEdges = {
  __typename?: 'AboutConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<AboutDocument>;
};

export type AboutConnection = Connection & {
  __typename?: 'AboutConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<AboutConnectionEdges>>>;
};

export type ContactHero = {
  __typename?: 'ContactHero';
  icon?: Maybe<Scalars['String']>;
  pageTitle?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  hook?: Maybe<Scalars['String']>;
  ctaButtonToggle?: Maybe<Scalars['Boolean']>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
  videoButtonToggle?: Maybe<Scalars['Boolean']>;
  videoButtonText?: Maybe<Scalars['String']>;
  videoButtonLink?: Maybe<Scalars['String']>;
};

export type ContactSeo = {
  __typename?: 'ContactSeo';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  noFollow?: Maybe<Scalars['Boolean']>;
  noIndex?: Maybe<Scalars['Boolean']>;
};

export type Contact = {
  __typename?: 'Contact';
  hero?: Maybe<ContactHero>;
  serviceAreas?: Maybe<Array<Maybe<Scalars['String']>>>;
  seo?: Maybe<ContactSeo>;
};

export type ContactDocument = Node & Document & {
  __typename?: 'ContactDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Contact;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type ContactConnectionEdges = {
  __typename?: 'ContactConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<ContactDocument>;
};

export type ContactConnection = Connection & {
  __typename?: 'ContactConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<ContactConnectionEdges>>>;
};

export type ProjectsHero = {
  __typename?: 'ProjectsHero';
  icon?: Maybe<Scalars['String']>;
  pageTitle?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  hook?: Maybe<Scalars['String']>;
  ctaButtonToggle?: Maybe<Scalars['Boolean']>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
  videoButtonToggle?: Maybe<Scalars['Boolean']>;
  videoButtonText?: Maybe<Scalars['String']>;
  videoButtonLink?: Maybe<Scalars['String']>;
};

export type ProjectsSeo = {
  __typename?: 'ProjectsSeo';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  noFollow?: Maybe<Scalars['Boolean']>;
  noIndex?: Maybe<Scalars['Boolean']>;
};

export type Projects = {
  __typename?: 'Projects';
  hero?: Maybe<ProjectsHero>;
  seo?: Maybe<ProjectsSeo>;
};

export type ProjectsDocument = Node & Document & {
  __typename?: 'ProjectsDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Projects;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type ProjectsConnectionEdges = {
  __typename?: 'ProjectsConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<ProjectsDocument>;
};

export type ProjectsConnection = Connection & {
  __typename?: 'ProjectsConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<ProjectsConnectionEdges>>>;
};

export type ProjectMorePhotos = {
  __typename?: 'ProjectMorePhotos';
  title?: Maybe<Scalars['String']>;
};

export type ProjectSeo = {
  __typename?: 'ProjectSeo';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  noFollow?: Maybe<Scalars['Boolean']>;
  noIndex?: Maybe<Scalars['Boolean']>;
};

export type Project = {
  __typename?: 'Project';
  title?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['String']>;
  featuredImage?: Maybe<Scalars['String']>;
  beforeAfterToggle?: Maybe<Scalars['Boolean']>;
  beforeImage?: Maybe<Scalars['String']>;
  afterImage?: Maybe<Scalars['String']>;
  projectDescription?: Maybe<Scalars['String']>;
  morePhotos?: Maybe<Array<Maybe<ProjectMorePhotos>>>;
  seo?: Maybe<ProjectSeo>;
  deactivate?: Maybe<Scalars['Boolean']>;
};

export type ProjectDocument = Node & Document & {
  __typename?: 'ProjectDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Project;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type ProjectConnectionEdges = {
  __typename?: 'ProjectConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<ProjectDocument>;
};

export type ProjectConnection = Connection & {
  __typename?: 'ProjectConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<ProjectConnectionEdges>>>;
};

export type ServiceHero = {
  __typename?: 'ServiceHero';
  icon?: Maybe<Scalars['String']>;
  pageTitle?: Maybe<Scalars['String']>;
  backgroundImageSrc?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  hook?: Maybe<Scalars['String']>;
  ctaButtonToggle?: Maybe<Scalars['Boolean']>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
  videoButtonToggle?: Maybe<Scalars['Boolean']>;
  videoButtonText?: Maybe<Scalars['String']>;
  videoButtonLink?: Maybe<Scalars['String']>;
};

export type ServiceFeaturedGridFeatures = {
  __typename?: 'ServiceFeaturedGridFeatures';
  title?: Maybe<Scalars['String']>;
  iconToggle?: Maybe<Scalars['Boolean']>;
  icon?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['String']>;
};

export type ServiceFeaturedGrid = {
  __typename?: 'ServiceFeaturedGrid';
  maxColumns?: Maybe<Scalars['Float']>;
  features?: Maybe<Array<Maybe<ServiceFeaturedGridFeatures>>>;
};

export type ServiceLongTextBodyRowsBodyColumns = {
  __typename?: 'ServiceLongTextBodyRowsBodyColumns';
  body?: Maybe<Scalars['String']>;
};

export type ServiceLongTextBodyRows = {
  __typename?: 'ServiceLongTextBodyRows';
  bodyColumns?: Maybe<Array<Maybe<ServiceLongTextBodyRowsBodyColumns>>>;
};

export type ServiceLongText = {
  __typename?: 'ServiceLongText';
  subHeadline?: Maybe<Scalars['String']>;
  headline?: Maybe<Scalars['String']>;
  bodyRows?: Maybe<Array<Maybe<ServiceLongTextBodyRows>>>;
  ctaButtonToggle?: Maybe<Scalars['Boolean']>;
  ctaButtonText?: Maybe<Scalars['String']>;
  ctaButtonLink?: Maybe<Scalars['String']>;
  ctaButtonToggle2?: Maybe<Scalars['Boolean']>;
  ctaButtonText2?: Maybe<Scalars['String']>;
  ctaButtonLink2?: Maybe<Scalars['String']>;
};

export type ServiceSeo = {
  __typename?: 'ServiceSeo';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  noFollow?: Maybe<Scalars['Boolean']>;
  noIndex?: Maybe<Scalars['Boolean']>;
};

export type Service = {
  __typename?: 'Service';
  serviceName?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  hero?: Maybe<ServiceHero>;
  featuredGrid?: Maybe<ServiceFeaturedGrid>;
  longText?: Maybe<ServiceLongText>;
  seo?: Maybe<ServiceSeo>;
};

export type ServiceDocument = Node & Document & {
  __typename?: 'ServiceDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Service;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type ServiceConnectionEdges = {
  __typename?: 'ServiceConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<ServiceDocument>;
};

export type ServiceConnection = Connection & {
  __typename?: 'ServiceConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<ServiceConnectionEdges>>>;
};

export type LegalSeo = {
  __typename?: 'LegalSeo';
  title?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  image?: Maybe<Scalars['String']>;
  noFollow?: Maybe<Scalars['Boolean']>;
  noIndex?: Maybe<Scalars['Boolean']>;
};

export type Legal = {
  __typename?: 'Legal';
  legalDocumentTitle?: Maybe<Scalars['String']>;
  body?: Maybe<Scalars['String']>;
  seo?: Maybe<LegalSeo>;
};

export type LegalDocument = Node & Document & {
  __typename?: 'LegalDocument';
  id: Scalars['ID'];
  sys: SystemInfo;
  data: Legal;
  form: Scalars['JSON'];
  values: Scalars['JSON'];
  dataJSON: Scalars['JSON'];
};

export type LegalConnectionEdges = {
  __typename?: 'LegalConnectionEdges';
  cursor?: Maybe<Scalars['String']>;
  node?: Maybe<LegalDocument>;
};

export type LegalConnection = Connection & {
  __typename?: 'LegalConnection';
  pageInfo?: Maybe<PageInfo>;
  totalCount: Scalars['Float'];
  edges?: Maybe<Array<Maybe<LegalConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  createDocument: DocumentNode;
  updateGlobalDocument: GlobalDocument;
  createGlobalDocument: GlobalDocument;
  updateHomeDocument: HomeDocument;
  createHomeDocument: HomeDocument;
  updateAboutDocument: AboutDocument;
  createAboutDocument: AboutDocument;
  updateContactDocument: ContactDocument;
  createContactDocument: ContactDocument;
  updateProjectsDocument: ProjectsDocument;
  createProjectsDocument: ProjectsDocument;
  updateProjectDocument: ProjectDocument;
  createProjectDocument: ProjectDocument;
  updateServiceDocument: ServiceDocument;
  createServiceDocument: ServiceDocument;
  updateLegalDocument: LegalDocument;
  createLegalDocument: LegalDocument;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String'];
  relativePath: Scalars['String'];
  template?: InputMaybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']>;
  relativePath: Scalars['String'];
  params: DocumentMutation;
};


export type MutationUpdateGlobalDocumentArgs = {
  relativePath: Scalars['String'];
  params: GlobalMutation;
};


export type MutationCreateGlobalDocumentArgs = {
  relativePath: Scalars['String'];
  params: GlobalMutation;
};


export type MutationUpdateHomeDocumentArgs = {
  relativePath: Scalars['String'];
  params: HomeMutation;
};


export type MutationCreateHomeDocumentArgs = {
  relativePath: Scalars['String'];
  params: HomeMutation;
};


export type MutationUpdateAboutDocumentArgs = {
  relativePath: Scalars['String'];
  params: AboutMutation;
};


export type MutationCreateAboutDocumentArgs = {
  relativePath: Scalars['String'];
  params: AboutMutation;
};


export type MutationUpdateContactDocumentArgs = {
  relativePath: Scalars['String'];
  params: ContactMutation;
};


export type MutationCreateContactDocumentArgs = {
  relativePath: Scalars['String'];
  params: ContactMutation;
};


export type MutationUpdateProjectsDocumentArgs = {
  relativePath: Scalars['String'];
  params: ProjectsMutation;
};


export type MutationCreateProjectsDocumentArgs = {
  relativePath: Scalars['String'];
  params: ProjectsMutation;
};


export type MutationUpdateProjectDocumentArgs = {
  relativePath: Scalars['String'];
  params: ProjectMutation;
};


export type MutationCreateProjectDocumentArgs = {
  relativePath: Scalars['String'];
  params: ProjectMutation;
};


export type MutationUpdateServiceDocumentArgs = {
  relativePath: Scalars['String'];
  params: ServiceMutation;
};


export type MutationCreateServiceDocumentArgs = {
  relativePath: Scalars['String'];
  params: ServiceMutation;
};


export type MutationUpdateLegalDocumentArgs = {
  relativePath: Scalars['String'];
  params: LegalMutation;
};


export type MutationCreateLegalDocumentArgs = {
  relativePath: Scalars['String'];
  params: LegalMutation;
};

export type DocumentMutation = {
  global?: InputMaybe<GlobalMutation>;
  home?: InputMaybe<HomeMutation>;
  about?: InputMaybe<AboutMutation>;
  contact?: InputMaybe<ContactMutation>;
  projects?: InputMaybe<ProjectsMutation>;
  project?: InputMaybe<ProjectMutation>;
  service?: InputMaybe<ServiceMutation>;
  legal?: InputMaybe<LegalMutation>;
};

export type GlobalHeaderNavChildrenMutation = {
  href?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  blurb?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
};

export type GlobalHeaderNavMutation = {
  href?: InputMaybe<Scalars['String']>;
  label?: InputMaybe<Scalars['String']>;
  children?: InputMaybe<Array<InputMaybe<GlobalHeaderNavChildrenMutation>>>;
};

export type GlobalHeaderMutation = {
  nav?: InputMaybe<Array<InputMaybe<GlobalHeaderNavMutation>>>;
};

export type GlobalReviewsReviewsListMutation = {
  title?: InputMaybe<Scalars['String']>;
  profile?: InputMaybe<Scalars['String']>;
  review?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['String']>;
};

export type GlobalReviewsMutation = {
  sliderSpeed?: InputMaybe<Scalars['Float']>;
  reviewsList?: InputMaybe<Array<InputMaybe<GlobalReviewsReviewsListMutation>>>;
};

export type GlobalContactInfoMutation = {
  businessName?: InputMaybe<Scalars['String']>;
  phoneNumber?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  hours?: InputMaybe<Scalars['String']>;
  facebookUrl?: InputMaybe<Scalars['String']>;
  googleMapsUrl?: InputMaybe<Scalars['String']>;
  linkedInUrl?: InputMaybe<Scalars['String']>;
  youTubeUrl?: InputMaybe<Scalars['String']>;
  instagramUrl?: InputMaybe<Scalars['String']>;
  bbbUrl?: InputMaybe<Scalars['String']>;
};

export type GlobalFooterServicesMutation = {
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
};

export type GlobalFooterPagesMutation = {
  title?: InputMaybe<Scalars['String']>;
  link?: InputMaybe<Scalars['String']>;
};

export type GlobalFooterLegalMutation = {
  title?: InputMaybe<Scalars['String']>;
};

export type GlobalFooterMutation = {
  services?: InputMaybe<Array<InputMaybe<GlobalFooterServicesMutation>>>;
  pages?: InputMaybe<Array<InputMaybe<GlobalFooterPagesMutation>>>;
  legal?: InputMaybe<Array<InputMaybe<GlobalFooterLegalMutation>>>;
};

export type GlobalMutation = {
  header?: InputMaybe<GlobalHeaderMutation>;
  reviews?: InputMaybe<GlobalReviewsMutation>;
  contactInfo?: InputMaybe<GlobalContactInfoMutation>;
  footer?: InputMaybe<GlobalFooterMutation>;
};

export type HomeHeroMutation = {
  subHeadline?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  mobileBackgroundSrc?: InputMaybe<Scalars['String']>;
  hook?: InputMaybe<Scalars['String']>;
  videoButtonToggle?: InputMaybe<Scalars['Boolean']>;
  videoButtonText?: InputMaybe<Scalars['String']>;
  videoButtonLink?: InputMaybe<Scalars['String']>;
  ctaButtonToggle?: InputMaybe<Scalars['Boolean']>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
};

export type HomeServiceSliderCategoryListServicesMutation = {
  title?: InputMaybe<Scalars['String']>;
};

export type HomeServiceSliderCategoryListMutation = {
  title?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['String']>;
  toggleServices?: InputMaybe<Scalars['Boolean']>;
  services?: InputMaybe<Array<InputMaybe<HomeServiceSliderCategoryListServicesMutation>>>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
  beforeImage?: InputMaybe<Scalars['String']>;
  afterImage?: InputMaybe<Scalars['String']>;
};

export type HomeServiceSliderMutation = {
  categoryList?: InputMaybe<Array<InputMaybe<HomeServiceSliderCategoryListMutation>>>;
};

export type HomePlanSliderCategoryListMutation = {
  title?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['String']>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
  featuredImage?: InputMaybe<Scalars['String']>;
};

export type HomePlanSliderMutation = {
  categoryList?: InputMaybe<Array<InputMaybe<HomePlanSliderCategoryListMutation>>>;
};

export type HomePreFooterCtaMutation = {
  subHeadline?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
};

export type HomeSeoMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  noFollow?: InputMaybe<Scalars['Boolean']>;
  noIndex?: InputMaybe<Scalars['Boolean']>;
};

export type HomeMutation = {
  hero?: InputMaybe<HomeHeroMutation>;
  serviceSlider?: InputMaybe<HomeServiceSliderMutation>;
  planSlider?: InputMaybe<HomePlanSliderMutation>;
  preFooterCTA?: InputMaybe<HomePreFooterCtaMutation>;
  seo?: InputMaybe<HomeSeoMutation>;
};

export type AboutHeroMutation = {
  icon?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  hook?: InputMaybe<Scalars['String']>;
  ctaButtonToggle?: InputMaybe<Scalars['Boolean']>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
  videoButtonToggle?: InputMaybe<Scalars['Boolean']>;
  videoButtonText?: InputMaybe<Scalars['String']>;
  videoButtonLink?: InputMaybe<Scalars['String']>;
};

export type AboutFeaturedSectionMutation = {
  subHeadline?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['String']>;
  ctaButtonToggle?: InputMaybe<Scalars['Boolean']>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
};

export type AboutFeaturedGridFeaturesMutation = {
  title?: InputMaybe<Scalars['String']>;
  iconToggle?: InputMaybe<Scalars['Boolean']>;
  icon?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['String']>;
};

export type AboutFeaturedGridMutation = {
  maxColumns?: InputMaybe<Scalars['Float']>;
  features?: InputMaybe<Array<InputMaybe<AboutFeaturedGridFeaturesMutation>>>;
};

export type AboutLongTextBodyRowsBodyColumnsMutation = {
  body?: InputMaybe<Scalars['String']>;
};

export type AboutLongTextBodyRowsMutation = {
  bodyColumns?: InputMaybe<Array<InputMaybe<AboutLongTextBodyRowsBodyColumnsMutation>>>;
};

export type AboutLongTextMutation = {
  subHeadline?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  bodyRows?: InputMaybe<Array<InputMaybe<AboutLongTextBodyRowsMutation>>>;
  ctaButtonToggle?: InputMaybe<Scalars['Boolean']>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
  ctaButtonToggle2?: InputMaybe<Scalars['Boolean']>;
  ctaButtonText2?: InputMaybe<Scalars['String']>;
  ctaButtonLink2?: InputMaybe<Scalars['String']>;
};

export type AboutSeoMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  noFollow?: InputMaybe<Scalars['Boolean']>;
  noIndex?: InputMaybe<Scalars['Boolean']>;
};

export type AboutMutation = {
  hero?: InputMaybe<AboutHeroMutation>;
  featuredSection?: InputMaybe<AboutFeaturedSectionMutation>;
  featuredGrid?: InputMaybe<AboutFeaturedGridMutation>;
  longText?: InputMaybe<AboutLongTextMutation>;
  seo?: InputMaybe<AboutSeoMutation>;
};

export type ContactHeroMutation = {
  icon?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  hook?: InputMaybe<Scalars['String']>;
  ctaButtonToggle?: InputMaybe<Scalars['Boolean']>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
  videoButtonToggle?: InputMaybe<Scalars['Boolean']>;
  videoButtonText?: InputMaybe<Scalars['String']>;
  videoButtonLink?: InputMaybe<Scalars['String']>;
};

export type ContactSeoMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  noFollow?: InputMaybe<Scalars['Boolean']>;
  noIndex?: InputMaybe<Scalars['Boolean']>;
};

export type ContactMutation = {
  hero?: InputMaybe<ContactHeroMutation>;
  serviceAreas?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  seo?: InputMaybe<ContactSeoMutation>;
};

export type ProjectsHeroMutation = {
  icon?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  hook?: InputMaybe<Scalars['String']>;
  ctaButtonToggle?: InputMaybe<Scalars['Boolean']>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
  videoButtonToggle?: InputMaybe<Scalars['Boolean']>;
  videoButtonText?: InputMaybe<Scalars['String']>;
  videoButtonLink?: InputMaybe<Scalars['String']>;
};

export type ProjectsSeoMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  noFollow?: InputMaybe<Scalars['Boolean']>;
  noIndex?: InputMaybe<Scalars['Boolean']>;
};

export type ProjectsMutation = {
  hero?: InputMaybe<ProjectsHeroMutation>;
  seo?: InputMaybe<ProjectsSeoMutation>;
};

export type ProjectMorePhotosMutation = {
  title?: InputMaybe<Scalars['String']>;
};

export type ProjectSeoMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  noFollow?: InputMaybe<Scalars['Boolean']>;
  noIndex?: InputMaybe<Scalars['Boolean']>;
};

export type ProjectMutation = {
  title?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['String']>;
  featuredImage?: InputMaybe<Scalars['String']>;
  beforeAfterToggle?: InputMaybe<Scalars['Boolean']>;
  beforeImage?: InputMaybe<Scalars['String']>;
  afterImage?: InputMaybe<Scalars['String']>;
  projectDescription?: InputMaybe<Scalars['String']>;
  morePhotos?: InputMaybe<Array<InputMaybe<ProjectMorePhotosMutation>>>;
  seo?: InputMaybe<ProjectSeoMutation>;
  deactivate?: InputMaybe<Scalars['Boolean']>;
};

export type ServiceHeroMutation = {
  icon?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Scalars['String']>;
  backgroundImageSrc?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  hook?: InputMaybe<Scalars['String']>;
  ctaButtonToggle?: InputMaybe<Scalars['Boolean']>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
  videoButtonToggle?: InputMaybe<Scalars['Boolean']>;
  videoButtonText?: InputMaybe<Scalars['String']>;
  videoButtonLink?: InputMaybe<Scalars['String']>;
};

export type ServiceFeaturedGridFeaturesMutation = {
  title?: InputMaybe<Scalars['String']>;
  iconToggle?: InputMaybe<Scalars['Boolean']>;
  icon?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['String']>;
};

export type ServiceFeaturedGridMutation = {
  maxColumns?: InputMaybe<Scalars['Float']>;
  features?: InputMaybe<Array<InputMaybe<ServiceFeaturedGridFeaturesMutation>>>;
};

export type ServiceLongTextBodyRowsBodyColumnsMutation = {
  body?: InputMaybe<Scalars['String']>;
};

export type ServiceLongTextBodyRowsMutation = {
  bodyColumns?: InputMaybe<Array<InputMaybe<ServiceLongTextBodyRowsBodyColumnsMutation>>>;
};

export type ServiceLongTextMutation = {
  subHeadline?: InputMaybe<Scalars['String']>;
  headline?: InputMaybe<Scalars['String']>;
  bodyRows?: InputMaybe<Array<InputMaybe<ServiceLongTextBodyRowsMutation>>>;
  ctaButtonToggle?: InputMaybe<Scalars['Boolean']>;
  ctaButtonText?: InputMaybe<Scalars['String']>;
  ctaButtonLink?: InputMaybe<Scalars['String']>;
  ctaButtonToggle2?: InputMaybe<Scalars['Boolean']>;
  ctaButtonText2?: InputMaybe<Scalars['String']>;
  ctaButtonLink2?: InputMaybe<Scalars['String']>;
};

export type ServiceSeoMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  noFollow?: InputMaybe<Scalars['Boolean']>;
  noIndex?: InputMaybe<Scalars['Boolean']>;
};

export type ServiceMutation = {
  serviceName?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  hero?: InputMaybe<ServiceHeroMutation>;
  featuredGrid?: InputMaybe<ServiceFeaturedGridMutation>;
  longText?: InputMaybe<ServiceLongTextMutation>;
  seo?: InputMaybe<ServiceSeoMutation>;
};

export type LegalSeoMutation = {
  title?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  noFollow?: InputMaybe<Scalars['Boolean']>;
  noIndex?: InputMaybe<Scalars['Boolean']>;
};

export type LegalMutation = {
  legalDocumentTitle?: InputMaybe<Scalars['String']>;
  body?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<LegalSeoMutation>;
};

export type GlobalPartsFragment = { __typename?: 'Global', header?: { __typename: 'GlobalHeader', nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null, children?: Array<{ __typename: 'GlobalHeaderNavChildren', href?: string | null, label?: string | null, blurb?: string | null, icon?: string | null } | null> | null } | null> | null } | null, reviews?: { __typename: 'GlobalReviews', sliderSpeed?: number | null, reviewsList?: Array<{ __typename: 'GlobalReviewsReviewsList', title?: string | null, profile?: string | null, review?: string | null, link?: string | null, date?: string | null } | null> | null } | null, contactInfo?: { __typename: 'GlobalContactInfo', businessName?: string | null, phoneNumber?: string | null, email?: string | null, hours?: string | null, facebookUrl?: string | null, googleMapsUrl?: string | null, linkedInUrl?: string | null, youTubeUrl?: string | null, instagramUrl?: string | null, bbbUrl?: string | null } | null, footer?: { __typename: 'GlobalFooter', services?: Array<{ __typename: 'GlobalFooterServices', title?: string | null, link?: string | null } | null> | null, pages?: Array<{ __typename: 'GlobalFooterPages', title?: string | null, link?: string | null } | null> | null, legal?: Array<{ __typename: 'GlobalFooterLegal', title?: { __typename?: 'LegalDocument', id: string } | null } | null> | null } | null };

export type HomePartsFragment = { __typename?: 'Home', hero?: { __typename: 'HomeHero', subHeadline?: string | null, headline?: string | null, mobileBackgroundSrc?: string | null, hook?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null } | null, serviceSlider?: { __typename: 'HomeServiceSlider', categoryList?: Array<{ __typename: 'HomeServiceSliderCategoryList', title?: string | null, headline?: string | null, body?: string | null, toggleServices?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, beforeImage?: string | null, afterImage?: string | null, services?: Array<{ __typename: 'HomeServiceSliderCategoryListServices', title?: { __typename?: 'ServiceDocument', id: string } | null } | null> | null } | null> | null } | null, planSlider?: { __typename: 'HomePlanSlider', categoryList?: Array<{ __typename: 'HomePlanSliderCategoryList', title?: string | null, headline?: string | null, icon?: string | null, body?: string | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, featuredImage?: string | null } | null> | null } | null, preFooterCTA?: { __typename: 'HomePreFooterCTA', subHeadline?: string | null, headline?: string | null, ctaButtonText?: string | null, ctaButtonLink?: string | null } | null, seo?: { __typename: 'HomeSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null };

export type AboutPartsFragment = { __typename?: 'About', hero?: { __typename: 'AboutHero', icon?: string | null, pageTitle?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, featuredSection?: { __typename: 'AboutFeaturedSection', subHeadline?: string | null, headline?: string | null, image?: string | null, body?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null } | null, featuredGrid?: { __typename: 'AboutFeaturedGrid', maxColumns?: number | null, features?: Array<{ __typename: 'AboutFeaturedGridFeatures', title?: string | null, iconToggle?: boolean | null, icon?: string | null, headline?: string | null, body?: string | null } | null> | null } | null, longText?: { __typename: 'AboutLongText', subHeadline?: string | null, headline?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, ctaButtonToggle2?: boolean | null, ctaButtonText2?: string | null, ctaButtonLink2?: string | null, bodyRows?: Array<{ __typename: 'AboutLongTextBodyRows', bodyColumns?: Array<{ __typename: 'AboutLongTextBodyRowsBodyColumns', body?: string | null } | null> | null } | null> | null } | null, seo?: { __typename: 'AboutSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null };

export type ContactPartsFragment = { __typename?: 'Contact', serviceAreas?: Array<string | null> | null, hero?: { __typename: 'ContactHero', icon?: string | null, pageTitle?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, seo?: { __typename: 'ContactSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null };

export type ProjectsPartsFragment = { __typename?: 'Projects', hero?: { __typename: 'ProjectsHero', icon?: string | null, pageTitle?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, seo?: { __typename: 'ProjectsSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null };

export type ProjectPartsFragment = { __typename?: 'Project', title?: string | null, date?: string | null, featuredImage?: string | null, beforeAfterToggle?: boolean | null, beforeImage?: string | null, afterImage?: string | null, projectDescription?: string | null, deactivate?: boolean | null, morePhotos?: Array<{ __typename: 'ProjectMorePhotos', title?: string | null } | null> | null, seo?: { __typename: 'ProjectSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null };

export type ServicePartsFragment = { __typename?: 'Service', serviceName?: string | null, icon?: string | null, hero?: { __typename: 'ServiceHero', icon?: string | null, pageTitle?: string | null, backgroundImageSrc?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, featuredGrid?: { __typename: 'ServiceFeaturedGrid', maxColumns?: number | null, features?: Array<{ __typename: 'ServiceFeaturedGridFeatures', title?: string | null, iconToggle?: boolean | null, icon?: string | null, headline?: string | null, body?: string | null } | null> | null } | null, longText?: { __typename: 'ServiceLongText', subHeadline?: string | null, headline?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, ctaButtonToggle2?: boolean | null, ctaButtonText2?: string | null, ctaButtonLink2?: string | null, bodyRows?: Array<{ __typename: 'ServiceLongTextBodyRows', bodyColumns?: Array<{ __typename: 'ServiceLongTextBodyRowsBodyColumns', body?: string | null } | null> | null } | null> | null } | null, seo?: { __typename: 'ServiceSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null };

export type LegalPartsFragment = { __typename?: 'Legal', legalDocumentTitle?: string | null, body?: string | null, seo?: { __typename: 'LegalSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null };

export type GetGlobalDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetGlobalDocumentQuery = { __typename?: 'Query', getGlobalDocument: { __typename?: 'GlobalDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Global', header?: { __typename: 'GlobalHeader', nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null, children?: Array<{ __typename: 'GlobalHeaderNavChildren', href?: string | null, label?: string | null, blurb?: string | null, icon?: string | null } | null> | null } | null> | null } | null, reviews?: { __typename: 'GlobalReviews', sliderSpeed?: number | null, reviewsList?: Array<{ __typename: 'GlobalReviewsReviewsList', title?: string | null, profile?: string | null, review?: string | null, link?: string | null, date?: string | null } | null> | null } | null, contactInfo?: { __typename: 'GlobalContactInfo', businessName?: string | null, phoneNumber?: string | null, email?: string | null, hours?: string | null, facebookUrl?: string | null, googleMapsUrl?: string | null, linkedInUrl?: string | null, youTubeUrl?: string | null, instagramUrl?: string | null, bbbUrl?: string | null } | null, footer?: { __typename: 'GlobalFooter', services?: Array<{ __typename: 'GlobalFooterServices', title?: string | null, link?: string | null } | null> | null, pages?: Array<{ __typename: 'GlobalFooterPages', title?: string | null, link?: string | null } | null> | null, legal?: Array<{ __typename: 'GlobalFooterLegal', title?: { __typename?: 'LegalDocument', id: string } | null } | null> | null } | null } } };

export type GetGlobalListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetGlobalListQuery = { __typename?: 'Query', getGlobalList: { __typename?: 'GlobalConnection', totalCount: number, edges?: Array<{ __typename?: 'GlobalConnectionEdges', node?: { __typename?: 'GlobalDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Global', header?: { __typename: 'GlobalHeader', nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null, children?: Array<{ __typename: 'GlobalHeaderNavChildren', href?: string | null, label?: string | null, blurb?: string | null, icon?: string | null } | null> | null } | null> | null } | null, reviews?: { __typename: 'GlobalReviews', sliderSpeed?: number | null, reviewsList?: Array<{ __typename: 'GlobalReviewsReviewsList', title?: string | null, profile?: string | null, review?: string | null, link?: string | null, date?: string | null } | null> | null } | null, contactInfo?: { __typename: 'GlobalContactInfo', businessName?: string | null, phoneNumber?: string | null, email?: string | null, hours?: string | null, facebookUrl?: string | null, googleMapsUrl?: string | null, linkedInUrl?: string | null, youTubeUrl?: string | null, instagramUrl?: string | null, bbbUrl?: string | null } | null, footer?: { __typename: 'GlobalFooter', services?: Array<{ __typename: 'GlobalFooterServices', title?: string | null, link?: string | null } | null> | null, pages?: Array<{ __typename: 'GlobalFooterPages', title?: string | null, link?: string | null } | null> | null, legal?: Array<{ __typename: 'GlobalFooterLegal', title?: { __typename?: 'LegalDocument', id: string } | null } | null> | null } | null } } | null } | null> | null } };

export type GetHomeDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetHomeDocumentQuery = { __typename?: 'Query', getHomeDocument: { __typename?: 'HomeDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Home', hero?: { __typename: 'HomeHero', subHeadline?: string | null, headline?: string | null, mobileBackgroundSrc?: string | null, hook?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null } | null, serviceSlider?: { __typename: 'HomeServiceSlider', categoryList?: Array<{ __typename: 'HomeServiceSliderCategoryList', title?: string | null, headline?: string | null, body?: string | null, toggleServices?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, beforeImage?: string | null, afterImage?: string | null, services?: Array<{ __typename: 'HomeServiceSliderCategoryListServices', title?: { __typename?: 'ServiceDocument', id: string } | null } | null> | null } | null> | null } | null, planSlider?: { __typename: 'HomePlanSlider', categoryList?: Array<{ __typename: 'HomePlanSliderCategoryList', title?: string | null, headline?: string | null, icon?: string | null, body?: string | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, featuredImage?: string | null } | null> | null } | null, preFooterCTA?: { __typename: 'HomePreFooterCTA', subHeadline?: string | null, headline?: string | null, ctaButtonText?: string | null, ctaButtonLink?: string | null } | null, seo?: { __typename: 'HomeSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } };

export type GetHomeListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetHomeListQuery = { __typename?: 'Query', getHomeList: { __typename?: 'HomeConnection', totalCount: number, edges?: Array<{ __typename?: 'HomeConnectionEdges', node?: { __typename?: 'HomeDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Home', hero?: { __typename: 'HomeHero', subHeadline?: string | null, headline?: string | null, mobileBackgroundSrc?: string | null, hook?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null } | null, serviceSlider?: { __typename: 'HomeServiceSlider', categoryList?: Array<{ __typename: 'HomeServiceSliderCategoryList', title?: string | null, headline?: string | null, body?: string | null, toggleServices?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, beforeImage?: string | null, afterImage?: string | null, services?: Array<{ __typename: 'HomeServiceSliderCategoryListServices', title?: { __typename?: 'ServiceDocument', id: string } | null } | null> | null } | null> | null } | null, planSlider?: { __typename: 'HomePlanSlider', categoryList?: Array<{ __typename: 'HomePlanSliderCategoryList', title?: string | null, headline?: string | null, icon?: string | null, body?: string | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, featuredImage?: string | null } | null> | null } | null, preFooterCTA?: { __typename: 'HomePreFooterCTA', subHeadline?: string | null, headline?: string | null, ctaButtonText?: string | null, ctaButtonLink?: string | null } | null, seo?: { __typename: 'HomeSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } | null } | null> | null } };

export type GetAboutDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetAboutDocumentQuery = { __typename?: 'Query', getAboutDocument: { __typename?: 'AboutDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'About', hero?: { __typename: 'AboutHero', icon?: string | null, pageTitle?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, featuredSection?: { __typename: 'AboutFeaturedSection', subHeadline?: string | null, headline?: string | null, image?: string | null, body?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null } | null, featuredGrid?: { __typename: 'AboutFeaturedGrid', maxColumns?: number | null, features?: Array<{ __typename: 'AboutFeaturedGridFeatures', title?: string | null, iconToggle?: boolean | null, icon?: string | null, headline?: string | null, body?: string | null } | null> | null } | null, longText?: { __typename: 'AboutLongText', subHeadline?: string | null, headline?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, ctaButtonToggle2?: boolean | null, ctaButtonText2?: string | null, ctaButtonLink2?: string | null, bodyRows?: Array<{ __typename: 'AboutLongTextBodyRows', bodyColumns?: Array<{ __typename: 'AboutLongTextBodyRowsBodyColumns', body?: string | null } | null> | null } | null> | null } | null, seo?: { __typename: 'AboutSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } };

export type GetAboutListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAboutListQuery = { __typename?: 'Query', getAboutList: { __typename?: 'AboutConnection', totalCount: number, edges?: Array<{ __typename?: 'AboutConnectionEdges', node?: { __typename?: 'AboutDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'About', hero?: { __typename: 'AboutHero', icon?: string | null, pageTitle?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, featuredSection?: { __typename: 'AboutFeaturedSection', subHeadline?: string | null, headline?: string | null, image?: string | null, body?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null } | null, featuredGrid?: { __typename: 'AboutFeaturedGrid', maxColumns?: number | null, features?: Array<{ __typename: 'AboutFeaturedGridFeatures', title?: string | null, iconToggle?: boolean | null, icon?: string | null, headline?: string | null, body?: string | null } | null> | null } | null, longText?: { __typename: 'AboutLongText', subHeadline?: string | null, headline?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, ctaButtonToggle2?: boolean | null, ctaButtonText2?: string | null, ctaButtonLink2?: string | null, bodyRows?: Array<{ __typename: 'AboutLongTextBodyRows', bodyColumns?: Array<{ __typename: 'AboutLongTextBodyRowsBodyColumns', body?: string | null } | null> | null } | null> | null } | null, seo?: { __typename: 'AboutSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } | null } | null> | null } };

export type GetContactDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetContactDocumentQuery = { __typename?: 'Query', getContactDocument: { __typename?: 'ContactDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Contact', serviceAreas?: Array<string | null> | null, hero?: { __typename: 'ContactHero', icon?: string | null, pageTitle?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, seo?: { __typename: 'ContactSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } };

export type GetContactListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetContactListQuery = { __typename?: 'Query', getContactList: { __typename?: 'ContactConnection', totalCount: number, edges?: Array<{ __typename?: 'ContactConnectionEdges', node?: { __typename?: 'ContactDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Contact', serviceAreas?: Array<string | null> | null, hero?: { __typename: 'ContactHero', icon?: string | null, pageTitle?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, seo?: { __typename: 'ContactSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } | null } | null> | null } };

export type GetProjectsDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetProjectsDocumentQuery = { __typename?: 'Query', getProjectsDocument: { __typename?: 'ProjectsDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Projects', hero?: { __typename: 'ProjectsHero', icon?: string | null, pageTitle?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, seo?: { __typename: 'ProjectsSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } };

export type GetProjectsListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetProjectsListQuery = { __typename?: 'Query', getProjectsList: { __typename?: 'ProjectsConnection', totalCount: number, edges?: Array<{ __typename?: 'ProjectsConnectionEdges', node?: { __typename?: 'ProjectsDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Projects', hero?: { __typename: 'ProjectsHero', icon?: string | null, pageTitle?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, seo?: { __typename: 'ProjectsSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } | null } | null> | null } };

export type GetProjectDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetProjectDocumentQuery = { __typename?: 'Query', getProjectDocument: { __typename?: 'ProjectDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Project', title?: string | null, date?: string | null, featuredImage?: string | null, beforeAfterToggle?: boolean | null, beforeImage?: string | null, afterImage?: string | null, projectDescription?: string | null, deactivate?: boolean | null, morePhotos?: Array<{ __typename: 'ProjectMorePhotos', title?: string | null } | null> | null, seo?: { __typename: 'ProjectSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } };

export type GetProjectListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetProjectListQuery = { __typename?: 'Query', getProjectList: { __typename?: 'ProjectConnection', totalCount: number, edges?: Array<{ __typename?: 'ProjectConnectionEdges', node?: { __typename?: 'ProjectDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Project', title?: string | null, date?: string | null, featuredImage?: string | null, beforeAfterToggle?: boolean | null, beforeImage?: string | null, afterImage?: string | null, projectDescription?: string | null, deactivate?: boolean | null, morePhotos?: Array<{ __typename: 'ProjectMorePhotos', title?: string | null } | null> | null, seo?: { __typename: 'ProjectSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } | null } | null> | null } };

export type GetServiceDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetServiceDocumentQuery = { __typename?: 'Query', getServiceDocument: { __typename?: 'ServiceDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Service', serviceName?: string | null, icon?: string | null, hero?: { __typename: 'ServiceHero', icon?: string | null, pageTitle?: string | null, backgroundImageSrc?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, featuredGrid?: { __typename: 'ServiceFeaturedGrid', maxColumns?: number | null, features?: Array<{ __typename: 'ServiceFeaturedGridFeatures', title?: string | null, iconToggle?: boolean | null, icon?: string | null, headline?: string | null, body?: string | null } | null> | null } | null, longText?: { __typename: 'ServiceLongText', subHeadline?: string | null, headline?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, ctaButtonToggle2?: boolean | null, ctaButtonText2?: string | null, ctaButtonLink2?: string | null, bodyRows?: Array<{ __typename: 'ServiceLongTextBodyRows', bodyColumns?: Array<{ __typename: 'ServiceLongTextBodyRowsBodyColumns', body?: string | null } | null> | null } | null> | null } | null, seo?: { __typename: 'ServiceSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } };

export type GetServiceListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetServiceListQuery = { __typename?: 'Query', getServiceList: { __typename?: 'ServiceConnection', totalCount: number, edges?: Array<{ __typename?: 'ServiceConnectionEdges', node?: { __typename?: 'ServiceDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Service', serviceName?: string | null, icon?: string | null, hero?: { __typename: 'ServiceHero', icon?: string | null, pageTitle?: string | null, backgroundImageSrc?: string | null, headline?: string | null, hook?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, videoButtonToggle?: boolean | null, videoButtonText?: string | null, videoButtonLink?: string | null } | null, featuredGrid?: { __typename: 'ServiceFeaturedGrid', maxColumns?: number | null, features?: Array<{ __typename: 'ServiceFeaturedGridFeatures', title?: string | null, iconToggle?: boolean | null, icon?: string | null, headline?: string | null, body?: string | null } | null> | null } | null, longText?: { __typename: 'ServiceLongText', subHeadline?: string | null, headline?: string | null, ctaButtonToggle?: boolean | null, ctaButtonText?: string | null, ctaButtonLink?: string | null, ctaButtonToggle2?: boolean | null, ctaButtonText2?: string | null, ctaButtonLink2?: string | null, bodyRows?: Array<{ __typename: 'ServiceLongTextBodyRows', bodyColumns?: Array<{ __typename: 'ServiceLongTextBodyRowsBodyColumns', body?: string | null } | null> | null } | null> | null } | null, seo?: { __typename: 'ServiceSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } | null } | null> | null } };

export type GetLegalDocumentQueryVariables = Exact<{
  relativePath: Scalars['String'];
}>;


export type GetLegalDocumentQuery = { __typename?: 'Query', getLegalDocument: { __typename?: 'LegalDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Legal', legalDocumentTitle?: string | null, body?: string | null, seo?: { __typename: 'LegalSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } };

export type GetLegalListQueryVariables = Exact<{ [key: string]: never; }>;


export type GetLegalListQuery = { __typename?: 'Query', getLegalList: { __typename?: 'LegalConnection', totalCount: number, edges?: Array<{ __typename?: 'LegalConnectionEdges', node?: { __typename?: 'LegalDocument', id: string, sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, data: { __typename?: 'Legal', legalDocumentTitle?: string | null, body?: string | null, seo?: { __typename: 'LegalSeo', title?: string | null, description?: string | null, image?: string | null, noFollow?: boolean | null, noIndex?: boolean | null } | null } } | null } | null> | null } };

export const GlobalPartsFragmentDoc = gql`
    fragment GlobalParts on Global {
  header {
    __typename
    nav {
      __typename
      href
      label
      children {
        __typename
        href
        label
        blurb
        icon
      }
    }
  }
  reviews {
    __typename
    sliderSpeed
    reviewsList {
      __typename
      title
      profile
      review
      link
      date
    }
  }
  contactInfo {
    __typename
    businessName
    phoneNumber
    email
    hours
    facebookUrl
    googleMapsUrl
    linkedInUrl
    youTubeUrl
    instagramUrl
    bbbUrl
  }
  footer {
    __typename
    services {
      __typename
      title
      link
    }
    pages {
      __typename
      title
      link
    }
    legal {
      __typename
      title {
        ... on Document {
          id
        }
      }
    }
  }
}
    `;
export const HomePartsFragmentDoc = gql`
    fragment HomeParts on Home {
  hero {
    __typename
    subHeadline
    headline
    mobileBackgroundSrc
    hook
    videoButtonToggle
    videoButtonText
    videoButtonLink
    ctaButtonToggle
    ctaButtonText
    ctaButtonLink
  }
  serviceSlider {
    __typename
    categoryList {
      __typename
      title
      headline
      body
      toggleServices
      services {
        __typename
        title {
          ... on Document {
            id
          }
        }
      }
      ctaButtonText
      ctaButtonLink
      beforeImage
      afterImage
    }
  }
  planSlider {
    __typename
    categoryList {
      __typename
      title
      headline
      icon
      body
      ctaButtonText
      ctaButtonLink
      featuredImage
    }
  }
  preFooterCTA {
    __typename
    subHeadline
    headline
    ctaButtonText
    ctaButtonLink
  }
  seo {
    __typename
    title
    description
    image
    noFollow
    noIndex
  }
}
    `;
export const AboutPartsFragmentDoc = gql`
    fragment AboutParts on About {
  hero {
    __typename
    icon
    pageTitle
    headline
    hook
    ctaButtonToggle
    ctaButtonText
    ctaButtonLink
    videoButtonToggle
    videoButtonText
    videoButtonLink
  }
  featuredSection {
    __typename
    subHeadline
    headline
    image
    body
    ctaButtonToggle
    ctaButtonText
    ctaButtonLink
  }
  featuredGrid {
    __typename
    maxColumns
    features {
      __typename
      title
      iconToggle
      icon
      headline
      body
    }
  }
  longText {
    __typename
    subHeadline
    headline
    bodyRows {
      __typename
      bodyColumns {
        __typename
        body
      }
    }
    ctaButtonToggle
    ctaButtonText
    ctaButtonLink
    ctaButtonToggle2
    ctaButtonText2
    ctaButtonLink2
  }
  seo {
    __typename
    title
    description
    image
    noFollow
    noIndex
  }
}
    `;
export const ContactPartsFragmentDoc = gql`
    fragment ContactParts on Contact {
  hero {
    __typename
    icon
    pageTitle
    headline
    hook
    ctaButtonToggle
    ctaButtonText
    ctaButtonLink
    videoButtonToggle
    videoButtonText
    videoButtonLink
  }
  serviceAreas
  seo {
    __typename
    title
    description
    image
    noFollow
    noIndex
  }
}
    `;
export const ProjectsPartsFragmentDoc = gql`
    fragment ProjectsParts on Projects {
  hero {
    __typename
    icon
    pageTitle
    headline
    hook
    ctaButtonToggle
    ctaButtonText
    ctaButtonLink
    videoButtonToggle
    videoButtonText
    videoButtonLink
  }
  seo {
    __typename
    title
    description
    image
    noFollow
    noIndex
  }
}
    `;
export const ProjectPartsFragmentDoc = gql`
    fragment ProjectParts on Project {
  title
  date
  featuredImage
  beforeAfterToggle
  beforeImage
  afterImage
  projectDescription
  morePhotos {
    __typename
    title
  }
  seo {
    __typename
    title
    description
    image
    noFollow
    noIndex
  }
  deactivate
}
    `;
export const ServicePartsFragmentDoc = gql`
    fragment ServiceParts on Service {
  serviceName
  icon
  hero {
    __typename
    icon
    pageTitle
    backgroundImageSrc
    headline
    hook
    ctaButtonToggle
    ctaButtonText
    ctaButtonLink
    videoButtonToggle
    videoButtonText
    videoButtonLink
  }
  featuredGrid {
    __typename
    maxColumns
    features {
      __typename
      title
      iconToggle
      icon
      headline
      body
    }
  }
  longText {
    __typename
    subHeadline
    headline
    bodyRows {
      __typename
      bodyColumns {
        __typename
        body
      }
    }
    ctaButtonToggle
    ctaButtonText
    ctaButtonLink
    ctaButtonToggle2
    ctaButtonText2
    ctaButtonLink2
  }
  seo {
    __typename
    title
    description
    image
    noFollow
    noIndex
  }
}
    `;
export const LegalPartsFragmentDoc = gql`
    fragment LegalParts on Legal {
  legalDocumentTitle
  body
  seo {
    __typename
    title
    description
    image
    noFollow
    noIndex
  }
}
    `;
export const GetGlobalDocumentDocument = gql`
    query getGlobalDocument($relativePath: String!) {
  getGlobalDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...GlobalParts
    }
  }
}
    ${GlobalPartsFragmentDoc}`;
export const GetGlobalListDocument = gql`
    query getGlobalList {
  getGlobalList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...GlobalParts
        }
      }
    }
  }
}
    ${GlobalPartsFragmentDoc}`;
export const GetHomeDocumentDocument = gql`
    query getHomeDocument($relativePath: String!) {
  getHomeDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...HomeParts
    }
  }
}
    ${HomePartsFragmentDoc}`;
export const GetHomeListDocument = gql`
    query getHomeList {
  getHomeList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...HomeParts
        }
      }
    }
  }
}
    ${HomePartsFragmentDoc}`;
export const GetAboutDocumentDocument = gql`
    query getAboutDocument($relativePath: String!) {
  getAboutDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...AboutParts
    }
  }
}
    ${AboutPartsFragmentDoc}`;
export const GetAboutListDocument = gql`
    query getAboutList {
  getAboutList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...AboutParts
        }
      }
    }
  }
}
    ${AboutPartsFragmentDoc}`;
export const GetContactDocumentDocument = gql`
    query getContactDocument($relativePath: String!) {
  getContactDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...ContactParts
    }
  }
}
    ${ContactPartsFragmentDoc}`;
export const GetContactListDocument = gql`
    query getContactList {
  getContactList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...ContactParts
        }
      }
    }
  }
}
    ${ContactPartsFragmentDoc}`;
export const GetProjectsDocumentDocument = gql`
    query getProjectsDocument($relativePath: String!) {
  getProjectsDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...ProjectsParts
    }
  }
}
    ${ProjectsPartsFragmentDoc}`;
export const GetProjectsListDocument = gql`
    query getProjectsList {
  getProjectsList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...ProjectsParts
        }
      }
    }
  }
}
    ${ProjectsPartsFragmentDoc}`;
export const GetProjectDocumentDocument = gql`
    query getProjectDocument($relativePath: String!) {
  getProjectDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...ProjectParts
    }
  }
}
    ${ProjectPartsFragmentDoc}`;
export const GetProjectListDocument = gql`
    query getProjectList {
  getProjectList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...ProjectParts
        }
      }
    }
  }
}
    ${ProjectPartsFragmentDoc}`;
export const GetServiceDocumentDocument = gql`
    query getServiceDocument($relativePath: String!) {
  getServiceDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...ServiceParts
    }
  }
}
    ${ServicePartsFragmentDoc}`;
export const GetServiceListDocument = gql`
    query getServiceList {
  getServiceList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...ServiceParts
        }
      }
    }
  }
}
    ${ServicePartsFragmentDoc}`;
export const GetLegalDocumentDocument = gql`
    query getLegalDocument($relativePath: String!) {
  getLegalDocument(relativePath: $relativePath) {
    sys {
      filename
      basename
      breadcrumbs
      path
      relativePath
      extension
    }
    id
    data {
      ...LegalParts
    }
  }
}
    ${LegalPartsFragmentDoc}`;
export const GetLegalListDocument = gql`
    query getLegalList {
  getLegalList {
    totalCount
    edges {
      node {
        id
        sys {
          filename
          basename
          breadcrumbs
          path
          relativePath
          extension
        }
        data {
          ...LegalParts
        }
      }
    }
  }
}
    ${LegalPartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      getGlobalDocument(variables: GetGlobalDocumentQueryVariables, options?: C): Promise<{data: GetGlobalDocumentQuery, variables: GetGlobalDocumentQueryVariables, query: string}> {
        return requester<{data: GetGlobalDocumentQuery, variables: GetGlobalDocumentQueryVariables, query: string}, GetGlobalDocumentQueryVariables>(GetGlobalDocumentDocument, variables, options);
      },
    getGlobalList(variables?: GetGlobalListQueryVariables, options?: C): Promise<{data: GetGlobalListQuery, variables: GetGlobalListQueryVariables, query: string}> {
        return requester<{data: GetGlobalListQuery, variables: GetGlobalListQueryVariables, query: string}, GetGlobalListQueryVariables>(GetGlobalListDocument, variables, options);
      },
    getHomeDocument(variables: GetHomeDocumentQueryVariables, options?: C): Promise<{data: GetHomeDocumentQuery, variables: GetHomeDocumentQueryVariables, query: string}> {
        return requester<{data: GetHomeDocumentQuery, variables: GetHomeDocumentQueryVariables, query: string}, GetHomeDocumentQueryVariables>(GetHomeDocumentDocument, variables, options);
      },
    getHomeList(variables?: GetHomeListQueryVariables, options?: C): Promise<{data: GetHomeListQuery, variables: GetHomeListQueryVariables, query: string}> {
        return requester<{data: GetHomeListQuery, variables: GetHomeListQueryVariables, query: string}, GetHomeListQueryVariables>(GetHomeListDocument, variables, options);
      },
    getAboutDocument(variables: GetAboutDocumentQueryVariables, options?: C): Promise<{data: GetAboutDocumentQuery, variables: GetAboutDocumentQueryVariables, query: string}> {
        return requester<{data: GetAboutDocumentQuery, variables: GetAboutDocumentQueryVariables, query: string}, GetAboutDocumentQueryVariables>(GetAboutDocumentDocument, variables, options);
      },
    getAboutList(variables?: GetAboutListQueryVariables, options?: C): Promise<{data: GetAboutListQuery, variables: GetAboutListQueryVariables, query: string}> {
        return requester<{data: GetAboutListQuery, variables: GetAboutListQueryVariables, query: string}, GetAboutListQueryVariables>(GetAboutListDocument, variables, options);
      },
    getContactDocument(variables: GetContactDocumentQueryVariables, options?: C): Promise<{data: GetContactDocumentQuery, variables: GetContactDocumentQueryVariables, query: string}> {
        return requester<{data: GetContactDocumentQuery, variables: GetContactDocumentQueryVariables, query: string}, GetContactDocumentQueryVariables>(GetContactDocumentDocument, variables, options);
      },
    getContactList(variables?: GetContactListQueryVariables, options?: C): Promise<{data: GetContactListQuery, variables: GetContactListQueryVariables, query: string}> {
        return requester<{data: GetContactListQuery, variables: GetContactListQueryVariables, query: string}, GetContactListQueryVariables>(GetContactListDocument, variables, options);
      },
    getProjectsDocument(variables: GetProjectsDocumentQueryVariables, options?: C): Promise<{data: GetProjectsDocumentQuery, variables: GetProjectsDocumentQueryVariables, query: string}> {
        return requester<{data: GetProjectsDocumentQuery, variables: GetProjectsDocumentQueryVariables, query: string}, GetProjectsDocumentQueryVariables>(GetProjectsDocumentDocument, variables, options);
      },
    getProjectsList(variables?: GetProjectsListQueryVariables, options?: C): Promise<{data: GetProjectsListQuery, variables: GetProjectsListQueryVariables, query: string}> {
        return requester<{data: GetProjectsListQuery, variables: GetProjectsListQueryVariables, query: string}, GetProjectsListQueryVariables>(GetProjectsListDocument, variables, options);
      },
    getProjectDocument(variables: GetProjectDocumentQueryVariables, options?: C): Promise<{data: GetProjectDocumentQuery, variables: GetProjectDocumentQueryVariables, query: string}> {
        return requester<{data: GetProjectDocumentQuery, variables: GetProjectDocumentQueryVariables, query: string}, GetProjectDocumentQueryVariables>(GetProjectDocumentDocument, variables, options);
      },
    getProjectList(variables?: GetProjectListQueryVariables, options?: C): Promise<{data: GetProjectListQuery, variables: GetProjectListQueryVariables, query: string}> {
        return requester<{data: GetProjectListQuery, variables: GetProjectListQueryVariables, query: string}, GetProjectListQueryVariables>(GetProjectListDocument, variables, options);
      },
    getServiceDocument(variables: GetServiceDocumentQueryVariables, options?: C): Promise<{data: GetServiceDocumentQuery, variables: GetServiceDocumentQueryVariables, query: string}> {
        return requester<{data: GetServiceDocumentQuery, variables: GetServiceDocumentQueryVariables, query: string}, GetServiceDocumentQueryVariables>(GetServiceDocumentDocument, variables, options);
      },
    getServiceList(variables?: GetServiceListQueryVariables, options?: C): Promise<{data: GetServiceListQuery, variables: GetServiceListQueryVariables, query: string}> {
        return requester<{data: GetServiceListQuery, variables: GetServiceListQueryVariables, query: string}, GetServiceListQueryVariables>(GetServiceListDocument, variables, options);
      },
    getLegalDocument(variables: GetLegalDocumentQueryVariables, options?: C): Promise<{data: GetLegalDocumentQuery, variables: GetLegalDocumentQueryVariables, query: string}> {
        return requester<{data: GetLegalDocumentQuery, variables: GetLegalDocumentQueryVariables, query: string}, GetLegalDocumentQueryVariables>(GetLegalDocumentDocument, variables, options);
      },
    getLegalList(variables?: GetLegalListQueryVariables, options?: C): Promise<{data: GetLegalListQuery, variables: GetLegalListQueryVariables, query: string}> {
        return requester<{data: GetLegalListQuery, variables: GetLegalListQueryVariables, query: string}, GetLegalListQueryVariables>(GetLegalListDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { staticRequest } from 'tinacms'
const requester: (doc: any, vars?: any, options?: any) => Promise<any> = async (
  doc,
  vars,
  _options
) => {
  let data = {}
  try {
    data = await staticRequest({
      query: doc,
      variables: vars,
    })
  } catch (e) {
    // swallow errors related to document creation
    console.warn('Warning: There was an error when fetching data')
    console.warn(e)
  }

  return { data, query: doc, variables: vars || {} }
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = ()=>getSdk(requester)

